def convert(x):
    #若為2^0，傳回0，變為2(0)
    if x == 0:
        return "0"
    result = []
    exp = 0
    #直到x變成0
    while x > 0:
        #轉為2進位，從低位數向上找(檢查當前2的最低位)，若最低位為1則代表該位有值(
        #如5(餘1)->2(為0)->1(餘1)， 1 0 1。
        #當前位元為1，代表轉為2進制時該位有值。
        if x % 2 == 1:
            #若次方為0且該位之值為1，代表值為2^0，若皆為0就不會進迴圈了
            if exp == 0:
                result.append("2(0)")
            #次方為1且該位之值為1，代表值為2，表示方法非為2(1)，
            elif exp == 1:
                result.append("2")
            #2的2次方以上，代表值為4以上，繼續遞歸，繼續()包下去。
            #如值為4，為2的2次方，遞歸後2表示為2，因此為2(2)，
            #若為第3次方，代表值為8，為2的3次方，為2(3)，3再遞歸為2+2(0)，結果為2(2+2(0))
            else:
                result.append(f"2({convert(exp)})")
        x //= 2
        exp += 1
    #從低次方找，因此要反轉，
    return '+'.join(reversed(result))

n = int(input())
print(convert(n))